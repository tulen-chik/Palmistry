from config import user_profiles, bot
from bd.type_place import get_all_type_places
from services.google_service import find_nearby_places
from services.user_service import update_favorite_places
from telebot import types
from telebot.types import KeyboardButton, ReplyKeyboardMarkup
import telebot
import os
import logging
import recomendations
from models.userDataClass import User_dataclass



def get_places(user_id, latitude, longitude):
    personality = user_profiles[user_id]['personality']
    preferred_places = get_all_type_places(personality)
    places_query = '|'.join(preferred_places)

    places = find_nearby_places(latitude, longitude, places_query)
    logging.warning(places)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –º–µ—Å—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_profiles[user_id] = {'places': places, 'awaiting_rating': False}
    places = recomendations.recommend_places(User_dataclass(id=0,id_telegram=user_id,mood_id=3,latitude=latitude,longitude=longitude),
                                             places,[""])
    logging.warning(user_profiles)
    places_refactor = []
    for place in places:
        places_refactor.append(place[1])
    return places[::-1]


current_place_index = 0


def send_places(user_id, places):
    global current_place_index  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞

    if places:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ –º–µ—Å—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        if current_place_index < len(places):
            place = places[current_place_index]

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–õ–∞–π–∫" –∏ "–î–∏–∑–ª–∞–π–∫"
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            like_button = types.KeyboardButton("üëç")
            dislike_button = types.KeyboardButton("üëé")
            keyboard.add(like_button, dislike_button)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            message = bot.send_photo(user_id,
                                     photo=f"https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference={place['–∞–≤–∞—Ç–∞—Ä']}&key={os.environ['GOOGLE_MAPS_KEY']}",
                                     caption=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {place['–Ω–∞–∑–≤–∞–Ω–∏–µ']}\n"
                                             f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–æ–∫: {place.get('–æ—Ü–µ–Ω–∫–∞', '–ù–µ—Ç –æ—Ü–µ–Ω–æ–∫')}\n"
                                             f"–ú–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ: {place['–º–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ']}",
                                     reply_markup=keyboard)

            # –û–±–Ω–æ–≤–ª—è–µ–º –ª—é–±–∏–º—ã–µ –º–µ—Å—Ç–∞
            update_favorite_places(user_id, place['–Ω–∞–∑–≤–∞–Ω–∏–µ'])

            # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.register_next_step_handler(message, lambda msg, m=message: handle_rating(msg, m, places))
        else:
            bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–º–æ–≥–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µüòò")
    else:
        bot.send_message(user_id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –Ω–∞—à–µ–ª —É–≤–µ—Å–µ–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π —Ä—è–¥–æ–º.")


def handle_rating(message, previous_message, places):
    user_id = message.from_user.id
    global current_place_index  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞

    bot.delete_message(user_id, message.message_id)

    if message.text == "üëç –õ–∞–π–∫":
        bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! üëç")
    elif message.text == "üëé –î–∏–∑–ª–∞–π–∫":
        bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! üëé")

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.delete_message(user_id, previous_message.message_id)

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—Ç–∞
    current_place_index += 1

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –º–µ—Å—Ç–æ
    send_places(user_id, places)